@startuml converter

enum NumericType {
    Boolean
    Byte
    Short
    Int
    Long
    Float
    Double
}

class Numeric {
    - value: U64
    - type: NumericType

    + **static** FromBoolean(value: bool): Numeric
    + **static** FromByte(value: uint8): Numeric
    + **static** FromShort(value: uint16): Numeric
    + **static** FromInt(value: int32): Numeric
    + **static** FromLong(value: int64): Numeric
    + **static** FromFloat(value: float32): Numeric
    + **static** FromDouble(value: float64): Numeric
    + ToBoolean(): bool
    + ToByte(): uint8
    + ToShort(): uint16
    + ToInt(): int32
    + ToLong(): int64
    + ToFloat(): float32
    + ToDouble(): float64
    + GetType(): NumericType
}

Numeric *-- NumericType : has


interface ConverterBase {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}


/' 
 ' ==== Converter for null and undefind ====
 '/

class NullTypeConverter implements ConverterBase {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

class UndefinedConverter implements ConverterBase {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

class PrimitiveConverter implements ConverterBase {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

/' 
 ' ==== Converter for numeric types ====
 '/
class NumericConverter extends PrimitiveConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + **virtual** ConvertToStatic(jsValue: napi_value): Numeric
    + **virtual** ConvertToDynamic(numeric: Numeric): napi_value
}

note right of NumericConverter
  后两个方法是虚方法, 需要在子类中实现. 子类会检查传入Numeric是否是自己的类型
end note


NumericConverter ..> Numeric : uses
NumericConverter ..> NumericType : uses

class BooleanConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class ByteConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class ShortConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class LongConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class FloatConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class DoubleConverter extends NumericConverter {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value

    + ConvertToStatic(jsValue: napi_value): Numeric
    + ConvertToDynamic(numeric: Numeric): napi_value
}

class StringConverter extends PrimitiveConverter {
    + ConvertToStatic(napi_value jsValue): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}


/' 
 ' ==== Dynamic Converter ====
 '/

interface DynamicConverterBase {
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

interface DynamicClassProxierBase extends DynamicConverterBase {
    + GetProxiedDynamicClassCtor(): napi_value
    + GetProxyClass(): EtsClass *
    + CreateDynamicInstance(etsObject: EtsObject *): napi_value
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

class UnimplementedDynamicClassProxier implements DynamicClassProxierBase {
    + GetProxiedDynamicClassCtor(): napi_value
    + GetProxyClass(): EtsClass *
    + CreateDynamicProxyInstance(etsObject: EtsObject *): napi_value
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

class ReflectDynamicClassProxier extends DynamicClassProxierBase {
    - ProxiedDynamicClassCtor: napi_value
    - ProxyClass: EtsClass *
    + GetProxiedDynamicClassCtor(): napi_value
    + GetProxyClass(): EtsClass *
    + CreateDynamicProxyInstance(etsObject: EtsObject *): napi_value
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

/' 
 ' ==== Static Converter ====
 '/

interface StaticConverterBase {
    + ConvertToStatic(jsValue: napi_value): EtsObject *
}

interface StaticClassProxierBase extends StaticConverterBase {
    + GetProxiedStaticClass(): EtsClass *
    + GetProxyClassCtor(): napi_value
    + CreateStaticProxyInstance(jsValue: napi_value): EtsObject *
    + ConvertToStatic(jsValue: napi_value): EtsObject *

}

class UnimplementedStaticClassProxier implements StaticClassProxierBase {
    + GetProxiedStaticClass(): EtsClass *
    + GetProxyClassCtor(): napi_value
    + CreateStaticProxyInstance(jsValue: napi_value): EtsObject *
    + ConvertToStatic(jsValue: napi_value): EtsObject *
}

class ReflectStaticClassProxier extends StaticClassProxierBase {
    - ProxiedStaticClass: EtsClass *
    - ProxyClassCtor: napi_value
    + GetProxiedStaticClass(): EtsClass *
    + GetProxyClassCtor(): napi_value
    + CreateStaticProxyInstance(jsValue: napi_value): EtsObject *
    + ConvertToStatic(jsValue: napi_value): EtsObject *
}


/' 
 ' ==== Converter for reference ====
 '/
class ReferenceConverter implements ConverterBase {
    - DynamicConvert: DynamicConverterBase *
    - StaticConvert: StaticConverterBase *
    + ConvertToStatic(jsValue: napi_value): EtsObject *
    + ConvertToDynamic(etsObject: EtsObject *): napi_value
}

ReferenceConverter ..> DynamicConverterBase : uses
ReferenceConverter ..> StaticConverterBase : uses

object ReflectDynamicClassConverter
ReflectDynamicClassConverter --> ReferenceConverter: instanceof
ReflectDynamicClassConverter ..> ReflectDynamicClassProxier : has
ReflectDynamicClassConverter ..> UnimplementedStaticClassProxier : has

object ReflectStaticClassConverter
ReflectStaticClassConverter --> ReferenceConverter: instanceof
ReflectStaticClassConverter ..> UnimplementedDynamicClassProxier : has
ReflectStaticClassConverter ..> ReflectStaticClassProxier : has

object ReflectDynamicAndStaticClassConverter
ReflectDynamicAndStaticClassConverter --> ReferenceConverter: instanceof
ReflectDynamicAndStaticClassConverter ..> ReflectDynamicClassProxier : has
ReflectDynamicAndStaticClassConverter ..> ReflectStaticClassProxier : has





'ReflectDynamicClassConverter: ReferenceConverter;
'object ReflectDynamicClassConverter : ReferenceConverter






' class ReflectDynamicClassConverter extends ReferenceConverter {
'     - DynamicProxier: ReflectDynamicClassProxier *
'     + ConvertToStatic(jsValue: napi_value): EtsObject *
'     + ConvertToDynamic(etsObject: EtsObject *): napi_value
' }

' ReflectDynamicClassConverter ..> ReflectDynamicClassProxier : uses

' note bottom of ReflectDynamicClassConverter
'   1.0的一个对象到1.2, 成为一个把所有属性访问/方法调用都转发到1.0的对象
'   ConvertToDynamic方法无效, 会抛出异常
' end note

' class ReflectStaticClassConverter extends ReferenceConverter {
'     - StaticProxier: ReflectStaticClassProxier *
'     + ConvertToStatic(jsValue: napi_value): EtsObject *
'     + ConvertToDynamic(etsObject: EtsObject *): napi_value
' }

' ReflectStaticClassConverter ..> ReflectStaticClassProxier : uses

' note bottom of ReflectStaticClassConverter
'   1.2的一个对象到1.0, 成为一个把所有属性访问/方法调用都转发到1.2的对象
'   ConvertToStatic方法无效, 会抛出异常
' end note

' class ReflectDynamicAndStaticClassConverter extends ReferenceConverter {
'     - DynamicProxier: ReflectDynamicClassProxier *
'     - StaticProxier: ReflectStaticClassProxier *
'     + ConvertToStatic(jsValue: napi_value): EtsObject *
'     + ConvertToDynamic(etsObject: EtsObject *): napi_value
' }

' ReflectDynamicAndStaticClassConverter ..> ReflectDynamicClassProxier : uses
' ReflectDynamicAndStaticClassConverter ..> ReflectStaticClassProxier : uses

' class JSValueConverter extends ReferenceConverter {
'     + ConvertToStatic(jsValue: napi_value): EtsObject *
'     + ConvertToDynamic(etsObject: EtsObject *): napi_value
' }

' class TupleStaticClassConverter extends ReferenceConverter {
'     + ConvertToStatic(jsValue: napi_value): EtsObject *
'     + ConvertToDynamic(etsObject: EtsObject *): napi_value
' }


@enduml
